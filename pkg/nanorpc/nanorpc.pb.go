// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: nanorpc.proto

package nanorpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	_ "protomcp.org/nanorpc/pkg/nanopb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NanoRPCRequest_Type int32

const (
	NanoRPCRequest_TYPE_UNSPECIFIED NanoRPCRequest_Type = 0
	NanoRPCRequest_TYPE_PING        NanoRPCRequest_Type = 1
	NanoRPCRequest_TYPE_REQUEST     NanoRPCRequest_Type = 2
	NanoRPCRequest_TYPE_SUBSCRIBE   NanoRPCRequest_Type = 3
)

// Enum value maps for NanoRPCRequest_Type.
var (
	NanoRPCRequest_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_PING",
		2: "TYPE_REQUEST",
		3: "TYPE_SUBSCRIBE",
	}
	NanoRPCRequest_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_PING":        1,
		"TYPE_REQUEST":     2,
		"TYPE_SUBSCRIBE":   3,
	}
)

func (x NanoRPCRequest_Type) Enum() *NanoRPCRequest_Type {
	p := new(NanoRPCRequest_Type)
	*p = x
	return p
}

func (x NanoRPCRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NanoRPCRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_nanorpc_proto_enumTypes[0].Descriptor()
}

func (NanoRPCRequest_Type) Type() protoreflect.EnumType {
	return &file_nanorpc_proto_enumTypes[0]
}

func (x NanoRPCRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NanoRPCRequest_Type.Descriptor instead.
func (NanoRPCRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_nanorpc_proto_rawDescGZIP(), []int{0, 0}
}

type NanoRPCResponse_Type int32

const (
	NanoRPCResponse_TYPE_UNSPECIFIED NanoRPCResponse_Type = 0
	NanoRPCResponse_TYPE_PONG        NanoRPCResponse_Type = 1
	NanoRPCResponse_TYPE_RESPONSE    NanoRPCResponse_Type = 2
	NanoRPCResponse_TYPE_UPDATE      NanoRPCResponse_Type = 3
)

// Enum value maps for NanoRPCResponse_Type.
var (
	NanoRPCResponse_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_PONG",
		2: "TYPE_RESPONSE",
		3: "TYPE_UPDATE",
	}
	NanoRPCResponse_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_PONG":        1,
		"TYPE_RESPONSE":    2,
		"TYPE_UPDATE":      3,
	}
)

func (x NanoRPCResponse_Type) Enum() *NanoRPCResponse_Type {
	p := new(NanoRPCResponse_Type)
	*p = x
	return p
}

func (x NanoRPCResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NanoRPCResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_nanorpc_proto_enumTypes[1].Descriptor()
}

func (NanoRPCResponse_Type) Type() protoreflect.EnumType {
	return &file_nanorpc_proto_enumTypes[1]
}

func (x NanoRPCResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NanoRPCResponse_Type.Descriptor instead.
func (NanoRPCResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_nanorpc_proto_rawDescGZIP(), []int{1, 0}
}

type NanoRPCResponse_Status int32

const (
	NanoRPCResponse_STATUS_UNSPECIFIED    NanoRPCResponse_Status = 0
	NanoRPCResponse_STATUS_OK             NanoRPCResponse_Status = 1
	NanoRPCResponse_STATUS_NOT_FOUND      NanoRPCResponse_Status = 2
	NanoRPCResponse_STATUS_NOT_AUTHORIZED NanoRPCResponse_Status = 3
	NanoRPCResponse_STATUS_INTERNAL_ERROR NanoRPCResponse_Status = 4
)

// Enum value maps for NanoRPCResponse_Status.
var (
	NanoRPCResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_OK",
		2: "STATUS_NOT_FOUND",
		3: "STATUS_NOT_AUTHORIZED",
		4: "STATUS_INTERNAL_ERROR",
	}
	NanoRPCResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":    0,
		"STATUS_OK":             1,
		"STATUS_NOT_FOUND":      2,
		"STATUS_NOT_AUTHORIZED": 3,
		"STATUS_INTERNAL_ERROR": 4,
	}
)

func (x NanoRPCResponse_Status) Enum() *NanoRPCResponse_Status {
	p := new(NanoRPCResponse_Status)
	*p = x
	return p
}

func (x NanoRPCResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NanoRPCResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_nanorpc_proto_enumTypes[2].Descriptor()
}

func (NanoRPCResponse_Status) Type() protoreflect.EnumType {
	return &file_nanorpc_proto_enumTypes[2]
}

func (x NanoRPCResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NanoRPCResponse_Status.Descriptor instead.
func (NanoRPCResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_nanorpc_proto_rawDescGZIP(), []int{1, 1}
}

type NanoRPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   int32               `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	RequestType NanoRPCRequest_Type `protobuf:"varint,2,opt,name=request_type,json=requestType,proto3,enum=NanoRPCRequest_Type" json:"request_type,omitempty"`
	// Types that are assignable to PathOneof:
	//
	//	*NanoRPCRequest_PathHash
	//	*NanoRPCRequest_Path
	PathOneof isNanoRPCRequest_PathOneof `protobuf_oneof:"path_oneof"`
	Data      []byte                     `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NanoRPCRequest) Reset() {
	*x = NanoRPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nanorpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NanoRPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NanoRPCRequest) ProtoMessage() {}

func (x *NanoRPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nanorpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NanoRPCRequest.ProtoReflect.Descriptor instead.
func (*NanoRPCRequest) Descriptor() ([]byte, []int) {
	return file_nanorpc_proto_rawDescGZIP(), []int{0}
}

func (x *NanoRPCRequest) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *NanoRPCRequest) GetRequestType() NanoRPCRequest_Type {
	if x != nil {
		return x.RequestType
	}
	return NanoRPCRequest_TYPE_UNSPECIFIED
}

func (m *NanoRPCRequest) GetPathOneof() isNanoRPCRequest_PathOneof {
	if m != nil {
		return m.PathOneof
	}
	return nil
}

func (x *NanoRPCRequest) GetPathHash() uint32 {
	if x, ok := x.GetPathOneof().(*NanoRPCRequest_PathHash); ok {
		return x.PathHash
	}
	return 0
}

func (x *NanoRPCRequest) GetPath() string {
	if x, ok := x.GetPathOneof().(*NanoRPCRequest_Path); ok {
		return x.Path
	}
	return ""
}

func (x *NanoRPCRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type isNanoRPCRequest_PathOneof interface {
	isNanoRPCRequest_PathOneof()
}

type NanoRPCRequest_PathHash struct {
	PathHash uint32 `protobuf:"varint,3,opt,name=path_hash,json=pathHash,proto3,oneof"` // FNV-1a of path
}

type NanoRPCRequest_Path struct {
	Path string `protobuf:"bytes,4,opt,name=path,proto3,oneof"`
}

func (*NanoRPCRequest_PathHash) isNanoRPCRequest_PathOneof() {}

func (*NanoRPCRequest_Path) isNanoRPCRequest_PathOneof() {}

type NanoRPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId       int32                  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ResponseType    NanoRPCResponse_Type   `protobuf:"varint,2,opt,name=response_type,json=responseType,proto3,enum=NanoRPCResponse_Type" json:"response_type,omitempty"`
	ResponseStatus  NanoRPCResponse_Status `protobuf:"varint,3,opt,name=response_status,json=responseStatus,proto3,enum=NanoRPCResponse_Status" json:"response_status,omitempty"`
	ResponseMessage string                 `protobuf:"bytes,4,opt,name=response_message,json=responseMessage,proto3" json:"response_message,omitempty"`
	Data            []byte                 `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NanoRPCResponse) Reset() {
	*x = NanoRPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nanorpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NanoRPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NanoRPCResponse) ProtoMessage() {}

func (x *NanoRPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nanorpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NanoRPCResponse.ProtoReflect.Descriptor instead.
func (*NanoRPCResponse) Descriptor() ([]byte, []int) {
	return file_nanorpc_proto_rawDescGZIP(), []int{1}
}

func (x *NanoRPCResponse) GetRequestId() int32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *NanoRPCResponse) GetResponseType() NanoRPCResponse_Type {
	if x != nil {
		return x.ResponseType
	}
	return NanoRPCResponse_TYPE_UNSPECIFIED
}

func (x *NanoRPCResponse) GetResponseStatus() NanoRPCResponse_Status {
	if x != nil {
		return x.ResponseStatus
	}
	return NanoRPCResponse_STATUS_UNSPECIFIED
}

func (x *NanoRPCResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *NanoRPCResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// NanoRPC specific options for methods
type NanoRPCMethodOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Request path for RPC routing
	RequestPath *string `protobuf:"bytes,1,opt,name=request_path,json=requestPath,proto3,oneof" json:"request_path,omitempty"`
}

func (x *NanoRPCMethodOptions) Reset() {
	*x = NanoRPCMethodOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nanorpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NanoRPCMethodOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NanoRPCMethodOptions) ProtoMessage() {}

func (x *NanoRPCMethodOptions) ProtoReflect() protoreflect.Message {
	mi := &file_nanorpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NanoRPCMethodOptions.ProtoReflect.Descriptor instead.
func (*NanoRPCMethodOptions) Descriptor() ([]byte, []int) {
	return file_nanorpc_proto_rawDescGZIP(), []int{2}
}

func (x *NanoRPCMethodOptions) GetRequestPath() string {
	if x != nil && x.RequestPath != nil {
		return *x.RequestPath
	}
	return ""
}

var file_nanorpc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*NanoRPCMethodOptions)(nil),
		Field:         5020,
		Name:          "nanorpc",
		Tag:           "bytes,5020,opt,name=nanorpc",
		Filename:      "nanorpc.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional NanoRPCMethodOptions nanorpc = 5020;
	E_Nanorpc = &file_nanorpc_proto_extTypes[0]
)

var File_nanorpc_proto protoreflect.FileDescriptor

var file_nanorpc_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6e, 0x61, 0x6e, 0x6f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x6e, 0x61, 0x6e, 0x6f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa0, 0x02, 0x0a, 0x0e, 0x4e, 0x61, 0x6e, 0x6f, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x4e, 0x61, 0x6e, 0x6f, 0x52, 0x50,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x61,
	0x74, 0x68, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x08, 0x70, 0x61, 0x74, 0x68, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x08, 0x32, 0x48, 0x00,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x92, 0x3f, 0x02, 0x18, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x51, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49,
	0x42, 0x45, 0x10, 0x03, 0x42, 0x0c, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x6f, 0x6e, 0x65,
	0x6f, 0x66, 0x22, 0xc2, 0x03, 0x0a, 0x0f, 0x4e, 0x61, 0x6e, 0x6f, 0x52, 0x50, 0x43, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x4e,
	0x61, 0x6e, 0x6f, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x40, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x4e, 0x61, 0x6e,
	0x6f, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x05, 0x92, 0x3f,
	0x02, 0x18, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x4f, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x22, 0x7b, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x22, 0x4f, 0x0a, 0x14, 0x4e, 0x61, 0x6e, 0x6f, 0x52,
	0x50, 0x43, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x26, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x3a, 0x53, 0x0a, 0x07, 0x6e, 0x61, 0x6e, 0x6f,
	0x72, 0x70, 0x63, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x9c, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x61, 0x6e,
	0x6f, 0x52, 0x50, 0x43, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x07, 0x6e, 0x61, 0x6e, 0x6f, 0x72, 0x70, 0x63, 0x88, 0x01, 0x01, 0x42, 0x27, 0x92,
	0x3f, 0x02, 0x20, 0x00, 0x5a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x63, 0x70, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6e, 0x61, 0x6e, 0x6f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6e,
	0x61, 0x6e, 0x6f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nanorpc_proto_rawDescOnce sync.Once
	file_nanorpc_proto_rawDescData = file_nanorpc_proto_rawDesc
)

func file_nanorpc_proto_rawDescGZIP() []byte {
	file_nanorpc_proto_rawDescOnce.Do(func() {
		file_nanorpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_nanorpc_proto_rawDescData)
	})
	return file_nanorpc_proto_rawDescData
}

var file_nanorpc_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_nanorpc_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_nanorpc_proto_goTypes = []interface{}{
	(NanoRPCRequest_Type)(0),           // 0: NanoRPCRequest.Type
	(NanoRPCResponse_Type)(0),          // 1: NanoRPCResponse.Type
	(NanoRPCResponse_Status)(0),        // 2: NanoRPCResponse.Status
	(*NanoRPCRequest)(nil),             // 3: NanoRPCRequest
	(*NanoRPCResponse)(nil),            // 4: NanoRPCResponse
	(*NanoRPCMethodOptions)(nil),       // 5: NanoRPCMethodOptions
	(*descriptorpb.MethodOptions)(nil), // 6: google.protobuf.MethodOptions
}
var file_nanorpc_proto_depIdxs = []int32{
	0, // 0: NanoRPCRequest.request_type:type_name -> NanoRPCRequest.Type
	1, // 1: NanoRPCResponse.response_type:type_name -> NanoRPCResponse.Type
	2, // 2: NanoRPCResponse.response_status:type_name -> NanoRPCResponse.Status
	6, // 3: nanorpc:extendee -> google.protobuf.MethodOptions
	5, // 4: nanorpc:type_name -> NanoRPCMethodOptions
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	4, // [4:5] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_nanorpc_proto_init() }
func file_nanorpc_proto_init() {
	if File_nanorpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nanorpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NanoRPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nanorpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NanoRPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nanorpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NanoRPCMethodOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nanorpc_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*NanoRPCRequest_PathHash)(nil),
		(*NanoRPCRequest_Path)(nil),
	}
	file_nanorpc_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nanorpc_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_nanorpc_proto_goTypes,
		DependencyIndexes: file_nanorpc_proto_depIdxs,
		EnumInfos:         file_nanorpc_proto_enumTypes,
		MessageInfos:      file_nanorpc_proto_msgTypes,
		ExtensionInfos:    file_nanorpc_proto_extTypes,
	}.Build()
	File_nanorpc_proto = out.File
	file_nanorpc_proto_rawDesc = nil
	file_nanorpc_proto_goTypes = nil
	file_nanorpc_proto_depIdxs = nil
}
